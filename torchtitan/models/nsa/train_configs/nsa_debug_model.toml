# torchtitan Config.toml for NSA debug model
# Single A100 GPU Training:
# python torchtitan/models/nsa/train_nsa.py --config
# torchtitan/models/nsa/train_configs/nsa_100m.toml
# 
# 4x H100 Multi-GPU Training:
# torchrun --nproc_per_node=4 torchtitan/models/nsa/train_nsa.py --config
# torchtitan/models/nsa/train_configs/nsa_100m.toml
# 
# Debug Mode Testing:
# python torchtitan/models/nsa/train_nsa.py --config
# torchtitan/models/nsa/train_configs/debug_model.toml

[job]
dump_folder = "./outputs/nsa_debug"
description = "NSA debug model training"
print_args = true
use_for_integration_test = true

[profiling]
enable_profiling = false
save_traces_folder = "profile_trace"
profile_freq = 10
enable_memory_snapshot = false
save_memory_snapshot_folder = "memory_snapshot"

[metrics]
log_freq = 1
disable_color_printing = false
enable_tensorboard = false
save_tb_folder = "tb"
enable_wandb = false

[model]
name = "nsa"
flavor = "debugmodel"
# test folder with tokenizer.json, for debug purpose only
hf_assets_path = "./tests/assets/tokenizer"
# converters = ["float8"]

# NSA debug specific parameters - minimal for testing
dim = 256
n_layers = 2
n_heads = 8
n_kv_heads = 2  # GQA with 4:1 ratio
vocab_size = 32000
multiple_of = 256
ffn_dim_multiplier = 1.3
norm_eps = 1e-5
rope_theta = 500000.0
max_seq_len = 2048
dropout = 0.0

# NSA specific parameters - smaller for debug
compression_block_size = 16
compression_stride = 8
selection_block_size = 32
num_selected_blocks = 8
sliding_window_size = 256

[optimizer]
name = "AdamW"
lr = 8e-4
weight_decay = 0.1
beta1 = 0.9
beta2 = 0.95
eps = 1e-8

[lr_scheduler]
warmup_steps = 2  # lr scheduler warm up
decay_ratio = 0.8  # lr scheduler decay ratio
decay_type = "linear"
min_lr_factor = 0.0

[training]
local_batch_size = 8
seq_len = 512
max_norm = 1.0  # grad norm clipping
steps = 10
dataset = "c4_test"  # supported datasets: c4_test (2K), c4 (177M)
compile = false

[parallelism]
data_parallel_replicate_degree = 1
data_parallel_shard_degree = 1
fsdp_reshard_after_forward = "default"  # default / never / always
tensor_parallel_degree = 1
enable_async_tensor_parallel = false
pipeline_parallel_degree = 1
context_parallel_degree = 1

[checkpoint]
enable_checkpoint = false
folder = "checkpoint"
interval = 10
last_save_model_only = false
export_dtype = "float32"
async_mode = "disabled"  # ["disabled", "async", "async_with_pinned_mem"]

[activation_checkpoint]
mode = "selective"  # ["none", "selective", "full"]
selective_ac_option = '2'  # 'int' = ac every positive int layer or 'op', ac based on ops policy

[float8]
enable_fsdp_float8_all_gather = false
precompute_float8_dynamic_scale_for_fsdp = false
filter_fqns = ["output"]

[validation]
enabled = false
dataset = "c4_validation"
freq = 5
steps = 10